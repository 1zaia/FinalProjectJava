Anotacoes trabalho final Java

- dentro do arquivo Main

	Esta onde o usuario inicia escolhendo se deseja jogar um 1v1 contra outro player ou 1vBot em um nivel facil ou, finalmente um 1vBot em um nivel dificil

- dentro do arquivo Matriz
	
	Funcao matriz()
	
		ela comeca solicitando a funcao printBoard() que posterior mente irei explicar

		ela é basicamente dividida em 2 partes

		1º parte é onde ha a disputa entre os 2 players humanos onde o computador armazena as posicoes que os player jogaram e imprime elas

		2º parte é onde acontece de ter as diferentes disputas entre o player e a maquina, aqui apenas chamamos outra classe a Game.java, que posteriormente irei explicar

		abaixo temos apenas 2 if onde verificamos com a classe Game, se há um vencedor (e qual) ou se empatou

		Na linha 69 tem "gameState.countPlayer = (gameState.countPlayer == 1) ? 2 : 1;"
		
			Separando o que cada coisa significa sai que:
				1. gameState.countPlayer == 1
					é o condicional de um if
				2.? 
					é literalmente uma pergunta, que determina q é um if
				3. : 
					é o else do if
			Entao essa linha é um if else, se o jogador 1 joga, entao na próxima vez é o 2 e vice-versa

	Funcao printBoard()

		a funcao dela é apenas para imprimir o tabuleiro que esta sendo jogado no momento

		com 2 for o fazendo que se imprima, onde esta vazio, ou seja, que o player pode escolher, "-" e onde esta ocupado com 1 e 2, simbolizando cada player

- dentro do arquivo Game

	A funcao deste arquivo é verificar si existe um ganhador ou se é um empate

	ele utiliza funcoes booleanas que tem como retorno o true ou o false

	funcao checkWinner()
		existe uma serie de if com as possibilidade que um player term de vitoria, incluindo linhas, colunas e diagonais

	funcao isDraw()
		ela apenas é acionada se chega no limite maximo de movimentos, que seria 9 (tem um contador dentro do matriz.java para isso)

- dentro do ComputerPlayer	
	
	essa classe serve apenas para quando o player quer jogar contra a maquina, se dividindo em 2 principais blocos de funcoes, quando o player seleciona o nivel facil e quando o player escolhe o nivel dificil

	recordando que sempre o computador sera o player 2 (dentro do universo apresentado na classe Matriz.java)

	makeMoveEasy()
		ela é a funcao em que o player usa quando seleciona o nivel facil, ela funciona de uma forma bem simples, utilizando numeros aleatorios, o computador verifica si é uma posicao valida e entao ele seleciona

	makeMoveHard()
		essa funcao é um pouco mais complicada pois cheguei a utilizar funcao auxiliar como a tryToWinOrBlock(), isso se deve pois a maquina nao utiliza nenhuma aleatoriedade, ela tenta bloquear o player para que ele nao vença, fazendo que ou ela venca ou de empate, fazendo ser muito dificil que o player ganhe uma partida

		ela se resume em sequencias de if, para que ela fique verificando como esta o tabuleiro para que ela possa ver o que ela tem que fazer